//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Pear.Entity
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PearEntities : DbContext
    {
        public PearEntities()
            : base("name=PearEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AdImage> AdImages { get; set; }
        public virtual DbSet<Advertisement> Advertisements { get; set; }
        public virtual DbSet<Consumer> Consumers { get; set; }
        public virtual DbSet<Merchant> Merchants { get; set; }
        public virtual DbSet<MerchantReview> MerchantReviews { get; set; }
        public virtual DbSet<Store> Stores { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
    
        [DbFunction("PearEntities", "fnGetStoresByDistance")]
        public virtual IQueryable<Store> fnGetStoresByDistance(Nullable<float> latitude, Nullable<float> longitude, Nullable<float> maxDistance)
        {
            var latitudeParameter = latitude.HasValue ?
                new ObjectParameter("latitude", latitude) :
                new ObjectParameter("latitude", typeof(float));
    
            var longitudeParameter = longitude.HasValue ?
                new ObjectParameter("longitude", longitude) :
                new ObjectParameter("longitude", typeof(float));
    
            var maxDistanceParameter = maxDistance.HasValue ?
                new ObjectParameter("maxDistance", maxDistance) :
                new ObjectParameter("maxDistance", typeof(float));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Store>("[PearEntities].[fnGetStoresByDistance](@latitude, @longitude, @maxDistance)", latitudeParameter, longitudeParameter, maxDistanceParameter);
        }
    }
}
